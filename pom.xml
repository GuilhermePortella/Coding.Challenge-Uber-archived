<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.5</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.uber</groupId>
    <artifactId>email-service</artifactId>
    <version>1.0.0</version>
    <name>email-service</name>
    <description>Coding Challenge Guidelines - Uber archived </description>
    <url />

    <properties>
        <java.version>21</java.version>
        <maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
        <maven.surefire.plugin.version>3.1.2</maven.surefire.plugin.version>
        <maven.failsafe.plugin.version>3.1.2</maven.failsafe.plugin.version>
        <maven.enforcer.plugin.version>3.3.0</maven.enforcer.plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <skipTests>false</skipTests>
    </properties>

    <dependencies>
        <!-- Core Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Observability / health endpoints -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Bean validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Devtools only at runtime -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- AWS SES SDK (explicit version kept for stability) -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>ses</artifactId>
            <version>2.33.9</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <release>${java.version}</release>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <fork>true</fork>
                </configuration>
            </plugin>

            <!-- Spring Boot packaging with layered jars for faster container builds -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <layers>
                        <enabled>true</enabled>
                    </layers>
                    <image>
                        <skip>false</skip>
                    </image>
                </configuration>
            </plugin>

            <!-- Surefire for unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <useSystemClassLoader>true</useSystemClassLoader>
                    <failIfNoTests>false</failIfNoTests>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <systemPropertyVariables>
                        <skipTests>${skipTests}</skipTests>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <!-- Failsafe for integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Enforce Java and basic rules -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven.enforcer.plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[21,)</version>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <version>3.6.0</version>
                                </requireMavenVersion>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Safety check: fail early if environment sets enable-preview while project targets Java 21 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>validate-preview-flags</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- property preview.bad will be true when java.version starts with 21 and MAVEN_OPTS contains enable-preview -->
                                <condition property="preview.bad">
                                    <and>
                                        <matches pattern="^21(\..*)?$" string="${java.version}"/>
                                        <contains string="${env.MAVEN_OPTS}" substring="--enable-preview"/>
                                    </and>
                                </condition>
                                <fail if="preview.bad">
                                    Found environment flag --enable-preview in MAVEN_OPTS while project targets Java ${java.version}.
                                    \nThis combination causes "invalid source release ${java.version} with --enable-preview" during compilation.
                                    \nRemove --enable-preview from MAVEN_OPTS or build with the preview profile (mvn -Ppreview ...) which sets java.version=22 and enables preview.
                                </fail>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Optional: dependency analysis for CI -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.5.0</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>ci</id>
            <properties>
                <skipTests>false</skipTests>
            </properties>
        </profile>

       <!-- Use this profile only if you want to compile with preview features.
           It sets java.version to 22 and enables the preview compiler option.
           Activate with: mvn -Ppreview clean package -->
        <profile>
            <id>preview</id>
            <properties>
                <java.version>22</java.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven.compiler.plugin.version}</version>
                        <configuration>
                            <release>${java.version}</release>
                            <encoding>${project.build.sourceEncoding}</encoding>
                            <fork>true</fork>
                            <compilerArgs>
                                <arg>--enable-preview</arg>
                                <arg>-Xlint:preview</arg>
                            </compilerArgs>
                    </configuration>
                </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>